version: "3.7"

services:
  # Mysql database
  db:
    hostname: db
    image: mysql:latest
    cap_add:
      - SYS_NICE 
    volumes:
      - sld-db_dev:/var/lib/mysql
    ports:
      - 3306:3306
        #    command: --init-file init.sql
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: restapi
      MYSQL_USER: adm
      MYSQL_PASSWORD: 123
    healthcheck:
        test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
        timeout: 20s
        retries: 10

  # Redis - result backend
  redis:
    image: redis
    hostname: redis
    ports:
      - 6379:6379


  # RabbitMQ - queue
  rabbit:
    hostname: rabbit
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - "5672:5672"  
      - "15672:15672"  # here, we can access rabbitmq management plugin
     
  mongodb:
    image: mongo
    hostname: mongodb 
    environment:
      - MONGO_INITDB_DATABASE=remote-state
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    volumes:
      - mongo-volume_dev:/data/db
    ports:
      - 27017:27017  

  # sd-remote-state
  remote-state:
    build: ../../sld-remote-state/
    #image: d10s0vsky/sld-remote-state:latest
    entrypoint: python -m uvicorn main:app --host 0.0.0.0 --port 8080 --workers 4
    hostname: remote-state
    environment:
      SLD_STORAGE_BACKEND: mongodb
      SLD_MONGODB_URL: "mongodb:27017/"
    ports:
      - "8080:8080"
  
  # sd-remote-state
  schedule:
    build: ../../sld-schedule/
    #image: d10s0vsky/sld-schedule:latest
    entrypoint: python -m uvicorn main:app --host 0.0.0.0 --port 10000 --workers 4
    hostname: schedule
    ports:
      - "10000:10000"
    depends_on:
      - api-backend
      - db
      - redis
      - remote-state
      - worker
      - rabbit


  # Celery worker
  worker:
    build: ../../sld-api-backend/
    #image: d10s0vsky/sld-api:latest
    entrypoint: ["celery", "--app", "src.worker.tasks.terraform_worker", "worker", "--loglevel=info", "-c", "8", "-E", "-Q", "any,squad,squad1,squad2"]
    environment:
      BROKER_USER: admin
      BROKER_PASSWD: admin
    depends_on:
      - rabbit
      - redis
      - db
      - remote-state

  # SLD Dashboard - UI
  sld-dashboard:
    build: ../../sld-dashboard/
    #image: d10s0vsky/sld-dashboard:latest
    hostname: sld-dashboard
    entrypoint: gunicorn --config gunicorn-cfg.py run:app
    env_file: ../../sld-dashboard/.env
    ports:
      - "5000:5000"
    depends_on:
        #      - api-backend
      - db
      - redis
      - remote-state
        #    - worker
      - rabbit
        #- schedule



  # FastApi Stack Deploy
  api-backend:
    build: ../../sld-api-backend/
    #image: d10s0vsky/sld-api:latest
    entrypoint: python -m uvicorn main:app --host 0.0.0.0 --port 8000 
    hostname: api-backend
    ports:
      - "8000:8000"
    environment:
      MYSQL_USER: adm
      MYSQL_PASSWORD: 123
      BROKER_USER: admin
      BROKER_PASSWD: admin
    depends_on:
      - db
      - redis
      - remote-state
      - worker
      - rabbit

volumes:
  sld-db_dev:
  mongo-volume_dev:
